% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OMLRun.R
\name{OMLRun}
\alias{OMLRun}
\title{Interface to OpenML Runs}
\description{
This is the class for tasks provided on \url{https://openml.org/}.
}
\section{mlr3 Integration}{

A \link{OMLTask} is returned by the active field \verb{$task}.
A \link{OMLData} is returned by the active field \verb{$data} (short for $task$data)
A \link{OMLFlow} is returned by the active field \verb{$flow}.
}

\examples{
\donttest{
oml_run = OMLRun$new(id = 1)

print(oml_run)
print(oml_run$task) # OMLTask
print(oml_run$data) # OMLData
print(oml_run$flow) # OMLFlow
print(oml_run$resampling) # OMLFlow
}

}
\references{
Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014).
\dQuote{OpenML.}
\emph{ACM SIGKDD Explorations Newsletter}, \bold{15}(2), 49--60.
\doi{10.1145/2641190.2641198}.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{(\code{integer(1)})\cr
OpenML run id.}

\item{\code{cache_dir}}{(\code{logical(1)} | \code{character(1)})\cr
Stores the location of the cache for objects retrieved from \url{https://openml.org}.
If set to \code{FALSE}, caching is disabled.

The package \CRANpkg{qs} is required for caching.}

\item{\code{('data.table')}}{\n
The parameter setting for this run.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{desc}}{(\code{list()})
Run description (meta information) downloaded and converted from
the JSON API response.}

\item{\code{flow_id}}{(\code{integer(1)})\cr
The id of the flow.}

\item{\code{flow}}{(OMLFlow)\link[mlr3:OMLFlow]{mlr3::OMLFlow} \cr
The \link{OMLFlow}.}

\item{\code{task_id}}{(\code{character(1)})\cr
The id of the task solved by this run.}

\item{\code{task}}{(\code{character(1)})\cr
The task solved by this run.}

\item{\code{data}}{(\link{OMLData}) \cr
The data used in this run.}

\item{\code{data_id}}{(\code{character(1)})\cr
The data id.}

\item{\code{task_type}}{(\code{character(1)})\cr
The type of task solved by this run (e.g., classification).}

\item{\code{tag}}{('character(n)') \n
A character vector containing possible tags.}

\item{\code{evaluation}}{The evaluation.}

\item{\code{('data.table')}}{\n
The parameter setting for this run.}

\item{\code{prediction}}{(Prediction)\link[mlr3:Prediction]{mlr3::Prediction}
The prediction of the run.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{OMLRun$new()}}
\item \href{#method-print}{\code{OMLRun$print()}}
\item \href{#method-convert}{\code{OMLRun$convert()}}
\item \href{#method-clone}{\code{OMLRun$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new object of class \code{OMLRun}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLRun$new(id, cache = getOption("mlr3oml.cache", FALSE))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{integer(1)}) \cr
OpenML run id.}

\item{\code{cache}}{(\code{logical(1)} | \code{character(1)})\cr
See field \code{cache} for an explanation of possible values.
Defaults to value of option \code{"mlr3oml.cache"}, or \code{FALSE} if not set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Prints the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLRun$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-convert"></a>}}
\if{latex}{\out{\hypertarget{method-convert}{}}}
\subsection{Method \code{convert()}}{
Converts the OMLRun into a (Resampling)\link[mlr3:Resampling]{mlr3::Resampling} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLRun$convert(store_backends = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLRun$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
