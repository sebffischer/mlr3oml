% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OMLCollection.R
\name{OMLCollection}
\alias{OMLCollection}
\title{OpenML Collection}
\description{
This is the class for collections served on \url{https://new.openml.org/search?type=study&study_type=task&sort=tasks_included}. A collection can contain datasets, flows, runs and tasks.
These are stored as an OMLContainer.
}
\section{mlr3 Intergration}{

The tasks can be converted to a list of \link[mlr3:Task]{mlr3::Task}s by calling \verb{$convert()} on the field
\code{tasks}.
The flows can be converted to a list of \link[mlr3:Learner]{mlr3::Learner}s by calling \verb{$convert()} on the field
\code{learners}.
The runs can be converted to a list of \link[mlr3:ResampleResult]{mlr3::ResampleResult}s by calling \verb{$convert} on the
field \code{runs}.
}

\references{
Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014).
\dQuote{OpenML.}
\emph{ACM SIGKDD Explorations Newsletter}, \bold{15}(2), 49--60.
\doi{10.1145/2641190.2641198}.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{(\code{integer(1)})\cr
OpenML collection id.}

\item{\code{cache_dir}}{(\code{logical(1)} | \code{character(1)})\cr
Stores the location of the cache for objects retrieved from \url{https://openml.org}.
If set to \code{FALSE}, caching is disabled.

The package \CRANpkg{qs} is required for caching.}

\item{\code{(`logical(1))\cr}}{Whether the downloaded data is cached.}

\item{\code{(`character(1)`)}}{name\cr
The name of the study.}

\item{\code{(`integer(n)`)\cr}}{The study creators.}

\item{\code{datetime}}{(\code{.POSIXct(1)})\cr
The datetime that the dataset was uploaded.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{(`logical(1))\cr}}{Whether the downloaded data is cached.}

\item{\code{(`character(1)`)}}{name\cr
The name of the study.}

\item{\code{(`integer(n)`)\cr}}{The study creators.}

\item{\code{datetime}}{(\code{.POSIXct(1)})\cr
The datetime that the dataset was uploaded.}

\item{\code{alias}}{(\code{character(n)})\cr
The alias of the study.}

\item{\code{tag}}{(\code{character(n)})\cr
A character vector containing the tags.}

\item{\code{main_entity_type}}{(\code{character(1)})\cr
The main entity type of the collection.}

\item{\code{description}}{(\code{character(1)}) \cr
Description of the collection.}

\item{\code{flow_ids}}{(\code{integer(n)})\cr
An vector containing the flow ids of the collection.}

\item{\code{data_ids}}{(\code{integer(n)})\cr
An vector containing the data ids of the collection.}

\item{\code{run_ids}}{(\code{integer(n)})\cr
An vector containing the run ids of the collection.}

\item{\code{task_ids}}{(\code{integer(n)})\cr
An vector containing the task ids of the collection.}

\item{\code{resampling_ids}}{(\code{integer(n)})\cr
An vector containing the resampling ids of the collection.
Note that this corresponds exactly to the task ids.}

\item{\code{runs}}{(`list(n)')
A list of \link[=OMLRun]{mlr3oml}s.}

\item{\code{flows}}{(`list(n)')
A list of \link[=OMLFlow]{mlr3oml}s.}

\item{\code{data}}{(`list(n)')
A list of \link[=OMLData]{mlr3oml}.}

\item{\code{tasks}}{(`list(n)')
A list of \link[=OMLTasks]{mlr3oml}s.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{OMLCollection$new()}}
\item \href{#method-print}{\code{OMLCollection$print()}}
\item \href{#method-convert}{\code{OMLCollection$convert()}}
\item \href{#method-clone}{\code{OMLCollection$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new object of class \code{OMLCollection}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLCollection$new(id, cache = getOption("mlr3oml.cache", FALSE))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{integer(1)})\cr
OpenML run id.}

\item{\code{cache}}{(\code{logical(1)} | \code{character(1)})\cr
See field \code{cache} for an explanation of possible values.
Defaults to value of option \code{"mlr3oml.cache"}, or \code{FALSE} if not set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Prints the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLCollection$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-convert"></a>}}
\if{latex}{\out{\hypertarget{method-convert}{}}}
\subsection{Method \code{convert()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLCollection$convert()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLCollection$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
